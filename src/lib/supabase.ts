import { createClient } from '@supabase/supabase-js'

// –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è Supabase
const supabaseUrl = import.meta.env.VITE_SUPABASE_URL
const supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY

// –î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
console.log('üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Supabase –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:')
console.log('URL:', supabaseUrl ? `${supabaseUrl.substring(0, 30)}...` : '‚ùå –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù')
console.log('ANON KEY:', supabaseAnonKey ? `${supabaseAnonKey.substring(0, 20)}...` : '‚ùå –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù')

if (!supabaseUrl || !supabaseAnonKey) {
  console.error('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è Supabase!')
  console.error('üìù –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª .env –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞')
  console.error('üìù –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å VITE_')
  console.error('üìù –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è .env')
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ .env —Ñ–∞–π–ª–∞
  console.error('üìù –ü—Ä–∏–º–µ—Ä .env —Ñ–∞–π–ª–∞:')
  console.error('VITE_SUPABASE_URL=https://your-project.supabase.co')
  console.error('VITE_SUPABASE_ANON_KEY=your-anon-key-here')
  
  // –í—ã–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –≤–º–µ—Å—Ç–æ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–≥–ª—É—à–∫–∏
  throw new Error('Supabase –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ VITE_SUPABASE_URL –∏ VITE_SUPABASE_ANON_KEY')
}

// –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç Supabase —Å –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
export const supabase = createClient(supabaseUrl, supabaseAnonKey, {
  auth: {
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã
    autoRefreshToken: true,
    persistSession: true,
    detectSessionInUrl: false, // –û—Ç–∫–ª—é—á–∞–µ–º –¥–ª—è SPA
    debug: import.meta.env.DEV,
    flowType: 'pkce',
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏
    storage: {
      getItem: (key) => {
        try {
          return localStorage.getItem(key)
        } catch (error) {
          console.warn('–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è localStorage:', error)
          return null
        }
      },
      setItem: (key, value) => {
        try {
          localStorage.setItem(key, value)
        } catch (error) {
          console.warn('–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ localStorage:', error)
        }
      },
      removeItem: (key) => {
        try {
          localStorage.removeItem(key)
        } catch (error) {
          console.warn('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è localStorage:', error)
        }
      }
    }
  },
  // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
  global: {
    headers: {
      'X-Client-Info': 'construction-store-app',
    },
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ fetch —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫ (–Ω–µ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ SDK)
    fetch: (url, options: RequestInit = {}) => {
      console.log('üåê Supabase –∑–∞–ø—Ä–æ—Å:', url)

      // –ö—Ä–æ—Å—Å–±—Ä–∞—É–∑–µ—Ä–Ω—ã–π —Ç–∞–π–º–∞—É—Ç –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Å—Ç–∞–≤–∏—Ç SDK
      const controller = new AbortController()
      const timeoutId = setTimeout(() => controller.abort(), 15000)
      const opts: RequestInit = { ...options, signal: controller.signal }

      return fetch(url, opts)
        .finally(() => clearTimeout(timeoutId))
        .catch((error: any) => {
        console.error('üåê –û—à–∏–±–∫–∞ —Å–µ—Ç–µ–≤–æ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è:', error.message)
        
        if (error.name === 'AbortError') {
          throw new Error('–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º')
        }
        if (error.message.includes('ERR_CONNECTION_RESET')) {
          throw new Error('–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å–±—Ä–æ—à–µ–Ω–æ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ')
        }
        if (error.message.includes('Failed to fetch')) {
          throw new Error('–ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É')
        }
        
        throw error
      })
    }
  },
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã realtime (–æ—Ç–∫–ª—é—á–∞–µ–º –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ —Ä–µ—Å—É—Ä—Å–æ–≤)
  realtime: {
    params: {
      eventsPerSecond: 1
    }
  }
})

// –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–æ –≤ simple-test.ts

// –¢–∏–ø—ã –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
export interface Profile {
  id: string
  email: string
  full_name: string
  phone?: string
  is_admin?: boolean
  created_at: string
  updated_at: string
}

export interface CartItem {
  id: string
  user_id: string
  product_id: string
  product_name: string
  product_price: number
  product_image: string
  product_category: string
  quantity: number
  created_at: string
}

export interface ContactMessage {
  id: string
  name: string
  phone: string
  email?: string
  message: string
  preferred_contact: 'phone' | 'whatsapp' | 'telegram'
  status: 'new' | 'processed'
  created_at: string
}

export interface Order {
  id: string
  user_id?: string
  customer_name: string
  customer_phone: string
  customer_email?: string
  customer_address: string
  items: any[]
  total_amount: number
  status: 'new' | 'confirmed' | 'processing' | 'shipped' | 'delivered' | 'cancelled'
  created_at: string
}